pipeline {
  // no agent required to run here. All steps run in flyweight executor on Master
  agent none
  parameters {
      // create a job parameter for this pipeline with a default
      booleanParam(defaultValue: false, description: 'Simulate the promotion', name: 'SIMUL')
  }
  options {
      buildDiscarder(logRotator(numToKeepStr:'10'))
      disableConcurrentBuilds()
      skipDefaultCheckout(true)
      timeout(time: 5, unit: 'MINUTES')
      timestamps()
  }
  tools {
     maven 'Maven-3.5.4'
  }
  stages {
    /*
    stage('Stage: when') {
    	when {
    		branch 'master'
    	}
    }
    stage('Stage: when') {
       when {
          expression {
              // only run when the expression is true
              currentBuild.getNumber() % 2 == 1
          }
       }
       steps {
          // call the current job and pass the SIMUL parameter value
          build job: currentBuild.getProjectName(), parameters: [
              booleanParam(name: 'SIMUL', value: params.SIMUL)
          ]
       }
    }
    */
    stage("Stage: When, Input") {
       environment {
          OUTPUT_PATH = './outputs/'
       }
      /*
      input{
            message "Press Ok to continue"
            submitter "user1,user2"
            parameters {
                string(name:'username', defaultValue: 'user', description: 'Username of the user pressing Ok')
            }
      }
      */
       steps {
         echo "echoing"
       }
    }
    stage('Parallel stages') {
        parallel {
            stage('Unit Test') {
                steps {
                  echo "running test"
                  sleep 10
                }
            }
            stage('Integration test Test On Linux') {
                steps {
                  echo "running integration"
                  sleep 5
                }
            }
        }
    }
  }
  post {
    always {
      echo "I ALWAYS run firsts"
    }
    unstable {
      echo "UNSTABLE runs after ALWAYS"
    }
  }
}